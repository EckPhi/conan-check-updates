[tool.black]
line-length = 100

[tool.isort]
line_length = 100
multi_line_output = 3
include_trailing_comma = true
use_parentheses = true

[tool.pylint.message_control]
good-names=[
    "e", "i", "j", "n", "r", "v", "it"
]
disable = [
    "import-error",
    "missing-module-docstring",
    "missing-class-docstring",
    "missing-function-docstring",
    "too-many-arguments",
]

[tool.pylint.format]
max-line-length = 100

[tool.mypy]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q"  # test summary for (a)ll except passed
testpaths = ["tests"]
log_cli = true
log_cli_level = "WARNING"

[tool.tox]
legacy_tox_ini = """
[tox]
envlist = black, isort, pylint, mypy, py37, py38, py39, py310, coverage-report

[testenv:black]
skip_install = true
deps = black
commands =
    black --diff .
    black --check .

[testenv:isort]
skip_install = true
deps = isort>5
commands =
    isort --diff .
    isort --check-only .

[testenv:pylint]
skip_install = true
deps = pylint
commands = pylint src/

[testenv:mypy]
skip_install = true
deps = mypy
commands =
    mypy --install-types --ignore-missing-imports src/

[testenv]
extras = tests
commands =
    coverage run --parallel -m pytest

[testenv:coverage-report]
skip_install = true
deps =
    coverage[toml]>=5
    toml
passenv = GITHUB_*
commands =
    - coverage combine
    coverage report

[testenv:coveralls]
skip_install = true
deps =
    coverage[toml]>=5
    coveralls
    toml
passenv = GITHUB_*
commands =
    - coverage combine
    coveralls --service=github
"""

[tool.coverage.run]
branch = true
source = ["conan_check_updates"]

[tool.coverage.paths]
source = ["src", ".tox/*/site-packages"]
